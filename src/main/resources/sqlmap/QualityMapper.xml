<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.QualityMapper">
  <resultMap id="BaseResultMap" type="com.springmvc.entity.Quality">
    <id column="QualityInfo_id" jdbcType="INTEGER" property="qualityinfoId" />
    <result column="QualityInfo_time" jdbcType="TIMESTAMP" property="qualityinfoTime" />
    <result column="QualityInfo_classification" jdbcType="INTEGER" property="qualityinfoClassification" />
    <result column="QualityInfo_weight" jdbcType="DOUBLE" property="qualityinfoWeight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    QualityInfo_id, QualityInfo_time, QualityInfo_classification, QualityInfo_weight
  </sql>
  <select id="selectByExample" parameterType="com.springmvc.entity.QualityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from quality
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quality
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quality
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.entity.QualityExample">
    delete from quality
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.Quality">
    insert into quality (QualityInfo_id, QualityInfo_time, 
      QualityInfo_classification, QualityInfo_weight
      )
    values (#{qualityinfoId,jdbcType=INTEGER}, #{qualityinfoTime,jdbcType=TIMESTAMP}, 
      #{qualityinfoClassification,jdbcType=INTEGER}, #{qualityinfoWeight,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.Quality">
    insert into quality
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qualityinfoId != null">
        QualityInfo_id,
      </if>
      <if test="qualityinfoTime != null">
        QualityInfo_time,
      </if>
      <if test="qualityinfoClassification != null">
        QualityInfo_classification,
      </if>
      <if test="qualityinfoWeight != null">
        QualityInfo_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qualityinfoId != null">
        #{qualityinfoId,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoTime != null">
        #{qualityinfoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityinfoClassification != null">
        #{qualityinfoClassification,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoWeight != null">
        #{qualityinfoWeight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.entity.QualityExample" resultType="java.lang.Integer">
    select count(*) from quality
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update quality
    <set>
      <if test="record.qualityinfoId != null">
        QualityInfo_id = #{record.qualityinfoId,jdbcType=INTEGER},
      </if>
      <if test="record.qualityinfoTime != null">
        QualityInfo_time = #{record.qualityinfoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qualityinfoClassification != null">
        QualityInfo_classification = #{record.qualityinfoClassification,jdbcType=INTEGER},
      </if>
      <if test="record.qualityinfoWeight != null">
        QualityInfo_weight = #{record.qualityinfoWeight,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update quality
    set QualityInfo_id = #{record.qualityinfoId,jdbcType=INTEGER},
      QualityInfo_time = #{record.qualityinfoTime,jdbcType=TIMESTAMP},
      QualityInfo_classification = #{record.qualityinfoClassification,jdbcType=INTEGER},
      QualityInfo_weight = #{record.qualityinfoWeight,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.Quality">
    update quality
    <set>
      <if test="qualityinfoTime != null">
        QualityInfo_time = #{qualityinfoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityinfoClassification != null">
        QualityInfo_classification = #{qualityinfoClassification,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoWeight != null">
        QualityInfo_weight = #{qualityinfoWeight,jdbcType=DOUBLE},
      </if>
    </set>
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.Quality">
    update quality
    set QualityInfo_time = #{qualityinfoTime,jdbcType=TIMESTAMP},
      QualityInfo_classification = #{qualityinfoClassification,jdbcType=INTEGER},
      QualityInfo_weight = #{qualityinfoWeight,jdbcType=DOUBLE}
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.springmvc.entity.Quality">
    <id column="QualityInfo_id" jdbcType="INTEGER" property="qualityinfoId" />
    <result column="QualityInfo_time" jdbcType="TIMESTAMP" property="qualityinfoTime" />
    <result column="QualityInfo_classification" jdbcType="INTEGER" property="qualityinfoClassification" />
    <result column="QualityInfo_weight" jdbcType="DOUBLE" property="qualityinfoWeight" />
  </resultMap>
  <sql id="Base_Column_List">
    QualityInfo_id, QualityInfo_time, QualityInfo_classification, QualityInfo_weight
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quality
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quality
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.Quality">
    insert into quality (QualityInfo_id, QualityInfo_time, 
      QualityInfo_classification, QualityInfo_weight
      )
    values (#{qualityinfoId,jdbcType=INTEGER}, #{qualityinfoTime,jdbcType=TIMESTAMP}, 
      #{qualityinfoClassification,jdbcType=INTEGER}, #{qualityinfoWeight,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.Quality">
    insert into quality
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qualityinfoId != null">
        QualityInfo_id,
      </if>
      <if test="qualityinfoTime != null">
        QualityInfo_time,
      </if>
      <if test="qualityinfoClassification != null">
        QualityInfo_classification,
      </if>
      <if test="qualityinfoWeight != null">
        QualityInfo_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qualityinfoId != null">
        #{qualityinfoId,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoTime != null">
        #{qualityinfoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityinfoClassification != null">
        #{qualityinfoClassification,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoWeight != null">
        #{qualityinfoWeight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.Quality">
    update quality
    <set>
      <if test="qualityinfoTime != null">
        QualityInfo_time = #{qualityinfoTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityinfoClassification != null">
        QualityInfo_classification = #{qualityinfoClassification,jdbcType=INTEGER},
      </if>
      <if test="qualityinfoWeight != null">
        QualityInfo_weight = #{qualityinfoWeight,jdbcType=DOUBLE},
      </if>
    </set>
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.Quality">
    update quality
    set QualityInfo_time = #{qualityinfoTime,jdbcType=TIMESTAMP},
      QualityInfo_classification = #{qualityinfoClassification,jdbcType=INTEGER},
      QualityInfo_weight = #{qualityinfoWeight,jdbcType=DOUBLE}
    where QualityInfo_id = #{qualityinfoId,jdbcType=INTEGER}
  </update>

</mapper>